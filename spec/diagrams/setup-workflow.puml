@startuml
skinparam ParticipantPadding 20
skinparam BoxPadding 20

title Anoncreds
scale 0.9


box "Issuer" #LightBlue
participant "Issuer" as IW
actor Issuer as I
endbox

box "Prover"
actor Prover as P
participant "Prover" as PW
endbox

actor Verifier as V

participant "Ledger" as L


note over IW, L #white
    dashed arrows: a value from Ledger
    <b>bold text</b>: anoncreds libindy API call
    <font color=red>red:</font> internal communication with walleted entity
    <font color=green>green:</font> submit/get to/from secure wallet
    <font color=blue>blue:</font> submit/get to/from Ledger
    black: communication between Issuer/Prover/Verifier

endnote


=== Create Credential Schema ==
I -> IW: <b>1. anoncreds_issuer_create_schema
IW -> I: <schema_id>, <schema_json>

I-[#blue]>L: send Schema txn

=== Create Credential Definition ==
I -[#blue]-> L: send get_schema req
L -[#blue]-> I: <schema>
I -> IW: <b>1. anoncreds_issuer_create_and_store_credential_def
IW -[#green]> IW: store public/private keys and correctness proof
IW -> I: <cred_def_id>, <cred_def_json>

I-[#blue]>L: send Credential Definition txn

=== Create Revocation Registry ==

I -> IW: <b>3. anoncreds_issuer_create_and_store_revoc_reg
IW -[#green]> IW: get keys
IW -[#green]> IW: store revoc_reg_def, revoc_reg_accum, \npriv_key, tails_generator
IW -> I: <revoc_reg_id>, <revoc_reg_def_json>, \n<revoc_reg_entry_json>

I-[#blue]>L: send REVOC_REG_DEF txn
I-[#blue]>L: send REVOC_REG_ENTRY txn

=== Create Link secret ==

P -> PW: <b>5.anoncreds_prover_create_link_secret
PW -[#green]> PW: store link secret
PW -> P: <link_secret_id>
@enduml